// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pets.Data;

namespace Pets.Data.Migrations
{
    [DbContext(typeof(PetsContext))]
    partial class PetsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Pets")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pets.Aggregates.Pet", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("MicrochipNumber")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasMaxLength(75);

                    b.Property<Guid>("ParentID");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("Pets.Entities.MedicalRecord", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid?>("PetID");

                    b.HasKey("ID");

                    b.HasIndex("PetID");

                    b.ToTable("MedicalRecord");
                });

            modelBuilder.Entity("Pets.Entities.Parent", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ID");

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("Pets.Aggregates.Pet", b =>
                {
                    b.HasOne("Pets.Entities.Parent", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Pets.Entities.MedicalRecord", b =>
                {
                    b.HasOne("Pets.Aggregates.Pet")
                        .WithMany("MedicalRecords")
                        .HasForeignKey("PetID");
                });

            modelBuilder.Entity("Pets.Entities.Parent", b =>
                {
                    b.OwnsOne("Pets.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ParentID");

                            b1.Property<string>("City")
                                .HasMaxLength(50);

                            b1.Property<string>("State")
                                .HasMaxLength(2);

                            b1.Property<string>("StreetAddress1")
                                .HasMaxLength(50);

                            b1.Property<string>("StreetAddress2")
                                .HasMaxLength(50);

                            b1.Property<string>("Zip")
                                .HasMaxLength(10);

                            b1.ToTable("Parent");

                            b1.HasOne("Pets.Entities.Parent")
                                .WithOne("Address")
                                .HasForeignKey("Pets.ValueObjects.Address", "ParentID")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Pets.ValueObjects.HumanName", "Name", b1 =>
                        {
                            b1.Property<Guid>("ParentID");

                            b1.Property<string>("FirstName")
                                .HasMaxLength(50);

                            b1.Property<string>("LastName")
                                .HasMaxLength(50);

                            b1.Property<string>("MiddleName")
                                .HasMaxLength(50);

                            b1.ToTable("Parent");

                            b1.HasOne("Pets.Entities.Parent")
                                .WithOne("Name")
                                .HasForeignKey("Pets.ValueObjects.HumanName", "ParentID")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
